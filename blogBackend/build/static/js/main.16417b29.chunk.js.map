{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","axios","get","then","response","data","newBlog","config","headers","Authorization","post","newToken","credentials","App","useState","blogs","setBlogs","setTitle","url","setUrl","setAuthor","user","setUser","username","setUsername","password","setPassword","errorMessage","setErrorMessage","notification","setNotification","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","handleSaveSubmit","e","a","preventDefault","savedBlog","newBlogs","concat","console","log","setTimeout","handleLoginSubmit","loginData","loginService","loginUser","setItem","stringify","handleTextChange","target","name","value","className","onSubmit","htmlFor","onChange","type","onClick","removeItem","handleLogoutSubmit","style","listStyleType","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16417b29.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\n// const baseUrl = 'http://localhost:3003/api/blogs'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst postNewBlog = (newBlog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  return axios.post(baseUrl, newBlog, config).then(response =>\n    response.data\n  )\n}\n\nexport default { getAll, postNewBlog, setToken }","import axios from 'axios'\n\n// const baseUrl = 'http://localhost:3003/api/login'\nconst baseUrl = '/api/login'\n\nconst login = (credentials) => {\n    return axios.post(baseUrl, credentials).then(response => response.data)\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './App.css'\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [url, setUrl] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState('')\n  const [notification, setNotification] = useState('')\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  const handleSaveSubmit = async (e) => {\n    e.preventDefault()\n    const newBlog = {\n      title: title,\n      author: author,\n      url: url\n    }\n    try {\n      const savedBlog = await blogService.postNewBlog(newBlog)\n      const newBlogs = blogs.concat(savedBlog)\n      console.log(newBlogs)\n      setBlogs(newBlogs)\n      setTitle(\"\")\n      setAuthor(\"\")\n      setUrl(\"\")\n      setNotification(`a new blog ${title} by ${author} added`)\n      setTimeout(() => {\n        setNotification('')\n      }, 5000)\n    }\n    catch (error) {\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n      setErrorMessage('something went wrong when saving the new blog, please enter again')\n    }\n  }\n\n  const handleLoginSubmit = async (e) => {\n    e.preventDefault()\n    const loginData = {\n      username: username,\n      password: password,\n    }\n    try {\n      const loginUser = await loginService.login(loginData)\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(loginUser)\n      )\n      window.localStorage.setItem(\"loggedIn\", true)\n      setUser(loginUser)\n      blogService.setToken(loginUser.token)\n      setUsername('')\n      setPassword('')\n    }\n    catch (error) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n  const handleTextChange = (e) => {\n    switch (e.target.name) {\n      case \"title\":\n        setTitle(e.target.value)\n        break\n      case \"url\":\n        setUrl(e.target.value)\n        break\n      case \"author\":\n        setAuthor(e.target.value)\n        break\n      case \"username\":\n        setUsername(e.target.value)\n        break\n      case \"password\":\n        setPassword(e.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const loginForm = () => {\n    return (\n      <form onSubmit={(e) => handleLoginSubmit(e)}>\n        <ul>\n          <li>\n            <label htmlFor=\"username\">username: </label>\n            <input value={username} name=\"username\" onChange={(e) => handleTextChange(e)}></input>\n          </li>\n          <li>\n            <label htmlFor=\"password\">password: </label>\n            <input value={password} name=\"password\" onChange={(e) => handleTextChange(e)}></input>\n          </li>\n          <li>\n            <button type=\"submit\" >login</button>\n          </li>\n        </ul>\n        <ul>\n        </ul>\n      </form>\n    )\n  }\n\n  const handleLogoutSubmit = (e) => {\n    e.preventDefault()\n    setUser(null)\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n  const blogForm = () => {\n    return (\n      <form onSubmit={(e) => handleSaveSubmit(e)}>\n        <ul style={{ listStyleType: \"none\" }}>\n          <li>\n            <label htmlFor=\"title\">title: </label>\n            <input value={title} name=\"title\" onChange={(e) => handleTextChange(e)}></input>\n          </li>\n          <li>\n            <label htmlFor=\"author\">author: </label>\n            <input value={author} name=\"author\" onChange={(e) => handleTextChange(e)}></input>\n          </li>\n          <li>\n            <label htmlFor=\"url\">url: </label>\n            <input value={url} name=\"url\" onChange={(e) => handleTextChange(e)}></input>\n          </li>\n          <li>\n            <button type=\"submit\">create</button>\n          </li>\n        </ul>\n      </form >\n    )\n  }\n  return (\n    <div>\n      {errorMessage && <div className='errorMessage'>\n        {errorMessage}\n      </div>}\n      {notification && <div className='notification'>\n        {notification}\n      </div>}\n      {user === null && loginForm()}\n      {user !== null &&\n        <div>\n          <h1>blogs</h1>\n          <p>{user.username} logged in <span><button onClick={(e) => handleLogoutSubmit(e)}>logout</button></span></p>\n          <h1>create new</h1>\n          {blogForm()}\n          {blogs.map(blog =>\n            <Blog key={blog.id} blog={blog} />\n          )}\n        </div>\n      }\n    </div >\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}