{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","axios","get","then","response","data","newBlog","config","headers","Authorization","post","console","log","newToken","credentials","App","useState","blogs","setBlogs","setTitle","url","setUrl","setAuthor","user","setUser","username","setUsername","password","setPassword","errorMessage","setErrorMessage","useEffect","blogService","handleTextChange","e","target","name","value","onSubmit","preventDefault","loginData","loginUser","loginService","window","localStorage","setItem","JSON","stringify","error","setTimeout","handleLoginSubmit","htmlFor","onChange","type","savedBlog","newBlogs","concat","handleSaveSubmit","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5190310f.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst postNewBlog = (newBlog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = axios.post(baseUrl, newBlog, config).then(response => {\n    console.log(response.data)\n  })\n  return response.data\n}\n\nexport default { getAll, postNewBlog, setToken }","import axios from 'axios'\n\nconst baseUrl = '/api/login'\nconst login = (credentials) => {\n    const response = axios.post(baseUrl, credentials).then(response => {\n        console.log(response.data)\n        return response\n    })\n    return response.data\n\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [url, setUrl] = useState(\"\")\n  const [author, setAuthor] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState()\n  const [password, setPassword] = useState()\n  const [errorMessage, setErrorMessage] = useState()\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  const handleSaveSubmit = (e) => {\n    e.preventDefault()\n    const newBlog = {\n      title: title,\n      author: author,\n      url: url\n    }\n    blogService.postNewBlog(newBlog).then(savedBlog => {\n      const newBlogs = blogs.concat(savedBlog)\n      setBlogs(newBlogs)\n      console.log(newBlogs)\n    }\n    )\n  }\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault()\n    const loginData = {\n      username: username,\n      password: password,\n    }\n    try {\n      const loginUser = loginService.login(loginData).then(response => {\n        console.log(response)\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(loginUser)\n      )\n      blogService.setToken(loginUser.token)\n      setUser(loginUser)\n      setUsername('')\n      setPassword('')\n    }\n    catch (error) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  const handleTextChange = (e) => {\n    switch (e.target.name) {\n      case \"title\":\n        setTitle(e.target.value)\n        console.log((title))\n        break\n      case \"url\":\n        setUrl(e.target.value)\n        console.log(url)\n        break\n      case \"author\":\n        setAuthor(e.target.author)\n        break\n      case \"username\":\n        setUsername(e.target.username)\n        break\n      case \"password\":\n        setPassword(e.target.password)\n        break\n    }\n  }\n\n  const loginForm = () => {\n    return (\n      <form onSubmit={(e) => handleLoginSubmit(e)}>\n        <label htmlFor=\"username\">username: </label>\n        <input value={username} name=\"username\" onChange={(e) => handleTextChange(e)}></input>\n        <label htmlFor=\"password\">password: </label>\n        <input value={password} name=\"password\" onChange={(e) => handleTextChange(e)}></input>\n        <button type=\"submit\" >login</button>\n      </form>\n    )\n  }\n\n  const blogForm = () => {\n    return (\n      <form onSubmit={(e) => handleSaveSubmit(e)}>\n        <label htmlFor=\"title\">title: </label>\n        <input value={title} name=\"title\" onChange={(e) => handleTextChange(e)}></input>\n        <label htmlFor=\"author\">author: </label>\n        <input value={author} name=\"author\" onChange={(e) => handleTextChange(e)}></input>\n        <label htmlFor=\"url\">url: </label>\n        <input value={url} name=\"url\" onChange={(e) => handleTextChange(e)}></input>\n        <button type=\"submit\">save</button>\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      {errorMessage}\n      {user === null && loginForm()}\n      {user !== null &&\n        <div>\n          <p>{user.name} logged in</p>\n          {blogForm()}\n        </div>\n      }\n      <h2>blogs</h2>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n\n\n    </div >\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}